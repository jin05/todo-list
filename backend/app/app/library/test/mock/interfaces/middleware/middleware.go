// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/middleware/middleware.go

// Package mock_middleware is a generated GoMock package.
package mock_middleware

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMiddlewares is a mock of Middlewares interface.
type MockMiddlewares struct {
	ctrl     *gomock.Controller
	recorder *MockMiddlewaresMockRecorder
}

// MockMiddlewaresMockRecorder is the mock recorder for MockMiddlewares.
type MockMiddlewaresMockRecorder struct {
	mock *MockMiddlewares
}

// NewMockMiddlewares creates a new mock instance.
func NewMockMiddlewares(ctrl *gomock.Controller) *MockMiddlewares {
	mock := &MockMiddlewares{ctrl: ctrl}
	mock.recorder = &MockMiddlewaresMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMiddlewares) EXPECT() *MockMiddlewaresMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockMiddlewares) List() []func(http.Handler) http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]func(http.Handler) http.Handler)
	return ret0
}

// List indicates an expected call of List.
func (mr *MockMiddlewaresMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMiddlewares)(nil).List))
}
